# ============================================================================
# PRODUCTION ENVIRONMENT - TEMPLATE FILE
# ============================================================================
# ⚠️  CRITICAL WARNING ⚠️
# This file contains PRODUCTION configuration template
# All secrets MUST be managed via platform secret managers
# NEVER commit actual production secrets to version control
# ============================================================================
# INSTRUCTIONS:
# 1. Copy this file to .env.prod
# 2. Replace all placeholder values with real PRODUCTION credentials
# 3. NEVER commit .env.prod to git
# 4. Use platform secret managers (Google Secret Manager, Koyeb Secrets, etc.)
#
# Deployed to: Google Cloud Run / Koyeb Production
# URL: https://api.weedgo.com
# Frontends: https://weedgo.com, https://www.weedgo.com
# ============================================================================

ENVIRONMENT=production

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================
# **CRITICAL**: Production database credentials
# Use Cloud SQL, Neon Production tier, or managed PostgreSQL service
# MUST be separate from dev/test/uat/beta databases
# Get from: Your production database provider
DB_HOST=GET_FROM_PRODUCTION_DATABASE_PROVIDER
DB_NAME=GET_FROM_PRODUCTION_DATABASE_PROVIDER
DB_USER=GET_FROM_PRODUCTION_DATABASE_PROVIDER
DB_PASSWORD=GET_FROM_PRODUCTION_DATABASE_PROVIDER
DB_PORT=5432
DATABASE_URL=postgresql://DB_USER:DB_PASSWORD@DB_HOST:5432/DB_NAME?sslmode=require

# ============================================================================
# API SERVICE (Cloud Run / Koyeb)
# ============================================================================
# Cloud platform sets PORT automatically (usually 8080)
API_HOST=0.0.0.0
API_PORT=8080
V5_PORT=8080
V5_HOST=0.0.0.0
API_BASE_URL=https://api.weedgo.com

# ============================================================================
# CORS CONFIGURATION (Environment-Driven)
# ============================================================================
# **REQUIRED**: List all Production frontend origins
# Semicolon-separated for Cloud Run/Koyeb YAML compatibility
# ⚠️  Be very strict in production - only allow trusted origins
CORS_ALLOWED_ORIGINS=https://weedgo.com;https://www.weedgo.com;https://app.weedgo.com;https://admin.weedgo.com
# Optional: No regex in production for tighter security
CORS_ORIGIN_REGEX=

# ============================================================================
# SECURITY
# ============================================================================
# **CRITICAL**: Use Google Cloud Secret Manager / Koyeb Secrets for these
# NEVER commit actual production secrets to git
# Generate with: openssl rand -hex 32
SECRET_KEY=GENERATE_WITH_OPENSSL_RAND_HEX_32_PRODUCTION_ONLY
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
JWT_SECRET_KEY=GENERATE_WITH_PYTHON_SECRETS_TOKEN_URLSAFE_32_PRODUCTION_ONLY
JWT_ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7

# ============================================================================
# REDIS CACHE
# ============================================================================
# **REQUIRED**: Production Redis instance
# Upstash Production tier or Google Cloud Memorystore
# Get from: https://console.upstash.com/redis (Production instance)
UPSTASH_REDIS_REST_URL=GET_FROM_UPSTASH_PRODUCTION_DASHBOARD
UPSTASH_REDIS_REST_TOKEN=GET_FROM_UPSTASH_PRODUCTION_DASHBOARD

# ============================================================================
# THIRD-PARTY APIs
# ============================================================================
# **REQUIRED**: Production API keys (MUST be different from dev/test)

# Mapbox Geocoding API
# Get from: https://account.mapbox.com/access-tokens/
# Create a production-only token with restricted scope
MAPBOX_API_KEY=GET_FROM_MAPBOX_PRODUCTION_DASHBOARD

# LLM Router API Keys (Production instances with higher rate limits)
# OpenRouter (DeepSeek R1 - Reasoning Model)
# Get from: https://openrouter.ai/keys
# Consider paid plan for production
OPENROUTER_API_KEY=GET_FROM_OPENROUTER_PRODUCTION_DASHBOARD

# Groq (Llama 3.3 70B - Ultra-Fast)
# Get from: https://console.groq.com/keys
# Consider paid plan for production
GROQ_API_KEY=GET_FROM_GROQ_PRODUCTION_DASHBOARD

# ============================================================================
# PAYMENT (Stripe LIVE KEYS)
# ============================================================================
# **CRITICAL**: Use LIVE Stripe keys for production
# ⚠️  NEVER use test keys in production
# ⚠️  These keys process REAL money
# Get from: https://dashboard.stripe.com/apikeys (LIVE mode, not test)
STRIPE_SECRET_KEY=GET_FROM_STRIPE_LIVE_MODE_DASHBOARD
STRIPE_PUBLISHABLE_KEY=GET_FROM_STRIPE_LIVE_MODE_DASHBOARD
STRIPE_WEBHOOK_SECRET=GET_FROM_STRIPE_LIVE_WEBHOOKS_AFTER_SETUP

# ============================================================================
# COMMUNICATION - OTP/SMS/Email
# ============================================================================
# **REQUIRED**: Production communication services

# Twilio Configuration (for SMS OTP)
# Get from: https://console.twilio.com/
# Use production Twilio account with proper phone number verification
TWILIO_ACCOUNT_SID=GET_FROM_TWILIO_PRODUCTION_DASHBOARD
TWILIO_AUTH_TOKEN=GET_FROM_TWILIO_PRODUCTION_DASHBOARD
TWILIO_PHONE_NUMBER=GET_FROM_TWILIO_PRODUCTION_DASHBOARD

# SendGrid Configuration (for Email OTP)
# Get from: https://app.sendgrid.com/settings/api_keys
# Use production SendGrid account with domain authentication
SENDGRID_API_KEY=GET_FROM_SENDGRID_PRODUCTION_DASHBOARD
SENDGRID_FROM_EMAIL=noreply@weedgo.com
SENDGRID_FROM_NAME=WeedGo

# SMTP Configuration (Fallback - Production SMTP)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=GET_PRODUCTION_SMTP_USER
SMTP_PASSWORD=GET_PRODUCTION_APP_SPECIFIC_PASSWORD
SMTP_FROM_EMAIL=noreply@weedgo.com
SMTP_FROM_NAME=WeedGo

# ============================================================================
# OTP CONFIGURATION (Production Defaults)
# ============================================================================
OTP_LENGTH=6
OTP_EXPIRY_MINUTES=10
OTP_MAX_ATTEMPTS=3
OTP_RATE_LIMIT_MAX=5
OTP_RATE_LIMIT_WINDOW=60

# ============================================================================
# PRODUCTION FLAGS
# ============================================================================
DEBUG=false
LOG_LEVEL=WARNING
# Enable production monitoring
METRICS_ENABLED=true
HEALTH_CHECK_PATH=/health
READINESS_PATH=/ready

# ============================================================================
# SETUP INSTRUCTIONS FOR PRODUCTION
# ============================================================================
#
# ⚠️  CRITICAL PRODUCTION SETUP STEPS ⚠️
#
# 1. NEVER create .env.prod locally with real secrets
#    Use platform secret managers instead:
#    - Google Cloud Secret Manager
#    - Koyeb Secrets
#    - AWS Secrets Manager
#    - Azure Key Vault
#
# 2. Get credentials from each service (PRODUCTION tier):
#    - Database: Cloud SQL, Neon Production, or managed PostgreSQL
#    - Redis: Upstash Production or Cloud Memorystore
#    - OpenRouter: https://openrouter.ai/keys (Paid plan)
#    - Groq: https://console.groq.com/keys (Paid plan)
#    - Mapbox: https://account.mapbox.com/access-tokens/ (Production token)
#    - Twilio: https://console.twilio.com/ (Production account)
#    - SendGrid: https://app.sendgrid.com/ (Production account)
#    - Stripe: https://dashboard.stripe.com/apikeys (LIVE mode)
#
# 3. Generate cryptographically secure secrets:
#    SECRET_KEY: openssl rand -hex 32
#    JWT_SECRET_KEY: python -c "import secrets; print(secrets.token_urlsafe(32))"
#
#    ⚠️  Save these in a secure password manager (1Password, LastPass, etc.)
#
# 4. Add all secrets to platform secret manager:
#
#    For Koyeb:
#    koyeb secret create DATABASE_URL --value "postgresql://..."
#    koyeb secret create STRIPE_SECRET_KEY --value "sk_live_..."
#    # ... repeat for all secrets
#
#    For Google Cloud Run:
#    gcloud secrets create DATABASE_URL --data-file=-
#    gcloud secrets create STRIPE_SECRET_KEY --data-file=-
#    # ... repeat for all secrets
#
# 5. Reference secrets in deployment config (koyeb.yaml or Cloud Run YAML):
#    env:
#      - key: DATABASE_URL
#        secret: DATABASE_URL
#      - key: STRIPE_SECRET_KEY
#        secret: STRIPE_SECRET_KEY
#
# 6. Production Security Checklist:
#    [ ] All secrets in platform secret manager
#    [ ] No secrets in git history
#    [ ] Different secrets per environment
#    [ ] Stripe LIVE keys (not test)
#    [ ] Database has automated backups
#    [ ] Redis has persistence enabled
#    [ ] CORS origins strictly limited
#    [ ] DEBUG=false
#    [ ] LOG_LEVEL=WARNING or ERROR
#    [ ] Monitoring and alerting enabled
#    [ ] SSL/TLS certificates configured
#    [ ] Domain authentication for email (SPF, DKIM)
#
# 7. Secret Rotation Schedule:
#    - JWT_SECRET_KEY: Every 90 days
#    - DATABASE_PASSWORD: Every 90 days
#    - API keys: Every 180 days or on suspected compromise
#    - Immediately rotate if:
#      * Employee leaves company
#      * Key found in logs/git
#      * Security incident
#
# ============================================================================
