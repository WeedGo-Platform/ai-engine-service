apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-service
  namespace: weedgo-prod
  labels:
    app: ai-service
    tier: production
    component: ai-engine
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: ai-service
  template:
    metadata:
      labels:
        app: ai-service
        tier: production
        component: ai-engine
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      # Security Context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      
      # Node Selection for GPU nodes
      nodeSelector:
        accelerator: nvidia-tesla-t4
        node-type: gpu-enabled
      
      # Anti-affinity for high availability
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - ai-service
              topologyKey: kubernetes.io/hostname
      
      # Tolerations for GPU nodes
      tolerations:
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
      
      containers:
      # .NET API Container
      - name: ai-api
        image: weedgo/ai-api:1.0.0
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: grpc
          containerPort: 8081
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Production"
        - name: ASPNETCORE_URLS
          value: "http://+:8080;http://+:8081"
        - name: ConnectionStrings__DefaultConnection
          valueFrom:
            secretKeyRef:
              name: ai-service-secrets
              key: postgres-connection-string
        - name: ConnectionStrings__Redis
          valueFrom:
            secretKeyRef:
              name: ai-service-secrets
              key: redis-connection-string
        - name: ML_SERVICE_HOST
          value: "localhost"
        - name: ML_SERVICE_PORT
          value: "50051"
        - name: Milvus__Host
          value: "milvus-service"
        - name: Milvus__Port
          value: "19530"
        - name: Logging__LogLevel__Default
          value: "Information"
        - name: Authentication__JwtSecret
          valueFrom:
            secretKeyRef:
              name: ai-service-secrets
              key: jwt-secret
        
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        
        # Health Checks
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        
        # Volume Mounts
        volumeMounts:
        - name: app-logs
          mountPath: /app/logs
        - name: model-cache
          mountPath: /app/models
          readOnly: true
        - name: shared-socket
          mountPath: /tmp/sockets
      
      # Python ML Container (Sidecar)
      - name: ai-ml
        image: weedgo/ai-ml:1.0.0
        imagePullPolicy: Always
        ports:
        - name: grpc-ml
          containerPort: 50051
          protocol: TCP
        - name: metrics-ml
          containerPort: 8501
          protocol: TCP
        
        env:
        - name: GRPC_PORT
          value: "50051"
        - name: MODEL_PATH
          value: "/models"
        - name: DATASETS_PATH
          value: "/datasets"
        - name: POSTGRES_HOST
          value: "postgres-service"
        - name: POSTGRES_DB
          value: "weedgo_ai"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: ai-service-secrets
              key: postgres-username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ai-service-secrets
              key: postgres-password
        - name: REDIS_HOST
          value: "redis-service"
        - name: REDIS_PORT
          value: "6379"
        - name: MILVUS_HOST
          value: "milvus-service"
        - name: MILVUS_PORT
          value: "19530"
        - name: LOG_LEVEL
          value: "INFO"
        - name: CUDA_VISIBLE_DEVICES
          value: "0"
        - name: OMP_NUM_THREADS
          value: "4"
        - name: PYTHONPATH
          value: "/app"
        
        resources:
          requests:
            memory: "4Gi"
            cpu: "2000m"
            nvidia.com/gpu: 1
          limits:
            memory: "8Gi"
            cpu: "4000m"
            nvidia.com/gpu: 1
        
        # Health Checks
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - "import grpc; grpc.channel_ready_future(grpc.insecure_channel('localhost:50051')).result(timeout=5)"
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        
        readinessProbe:
          exec:
            command:
            - python
            - -c
            - "import grpc; grpc.channel_ready_future(grpc.insecure_channel('localhost:50051')).result(timeout=5)"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        # Volume Mounts
        volumeMounts:
        - name: ml-models
          mountPath: /models
          readOnly: true
        - name: datasets
          mountPath: /datasets
          readOnly: true
        - name: ml-logs
          mountPath: /app/logs
        - name: shared-socket
          mountPath: /tmp/sockets
        - name: dshm
          mountPath: /dev/shm
      
      # Model Cache Updater (Sidecar)
      - name: model-updater
        image: weedgo/model-updater:1.0.0
        imagePullPolicy: Always
        
        env:
        - name: MODEL_REGISTRY_URL
          value: "http://mlflow-service:5000"
        - name: S3_BUCKET
          value: "weedgo-ml-models"
        - name: AWS_REGION
          value: "ca-central-1"
        - name: SYNC_INTERVAL
          value: "3600"  # 1 hour
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: ai-service-secrets
              key: aws-access-key
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: ai-service-secrets
              key: aws-secret-key
        
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        
        volumeMounts:
        - name: ml-models
          mountPath: /models
        - name: model-cache
          mountPath: /cache
      
      # Init Container for Model Loading
      initContainers:
      - name: model-loader
        image: weedgo/model-loader:1.0.0
        env:
        - name: MODEL_REGISTRY_URL
          value: "http://mlflow-service:5000"
        - name: REQUIRED_MODELS
          value: "recommendation,face_recognition,pricing,nlp"
        volumeMounts:
        - name: ml-models
          mountPath: /models
        - name: datasets
          mountPath: /datasets
      
      # Volumes
      volumes:
      - name: ml-models
        persistentVolumeClaim:
          claimName: ai-models-pvc
      - name: datasets
        persistentVolumeClaim:
          claimName: ai-datasets-pvc
      - name: model-cache
        emptyDir:
          sizeLimit: 10Gi
      - name: app-logs
        emptyDir:
          sizeLimit: 1Gi
      - name: ml-logs
        emptyDir:
          sizeLimit: 2Gi
      - name: shared-socket
        emptyDir: {}
      - name: dshm
        emptyDir:
          medium: Memory
          sizeLimit: 2Gi
      
      # Service Account
      serviceAccountName: ai-service-account
      
      # DNS Policy
      dnsPolicy: ClusterFirst
      
      # Restart Policy
      restartPolicy: Always
      
      # Termination Grace Period
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: ai-service
  namespace: weedgo-prod
  labels:
    app: ai-service
    tier: production
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: 8080
    protocol: TCP
  - name: grpc
    port: 8081
    targetPort: 8081
    protocol: TCP
  selector:
    app: ai-service

---
apiVersion: v1
kind: Service
metadata:
  name: ai-service-internal
  namespace: weedgo-prod
  labels:
    app: ai-service
    tier: production
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    protocol: TCP
  - name: grpc
    port: 8081
    targetPort: 8081
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: 9090
    protocol: TCP
  - name: ml-metrics
    port: 8501
    targetPort: 8501
    protocol: TCP
  selector:
    app: ai-service

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ai-service-hpa
  namespace: weedgo-prod
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ai-service
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: ai_requests_per_second
      target:
        type: AverageValue
        averageValue: "100"

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: ai-service-pdb
  namespace: weedgo-prod
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: ai-service

---
# Network Policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: ai-service-network-policy
  namespace: weedgo-prod
spec:
  podSelector:
    matchLabels:
      app: ai-service
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: weedgo-prod
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    ports:
    - protocol: TCP
      port: 8080
    - protocol: TCP
      port: 8081
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: weedgo-prod
    ports:
    - protocol: TCP
      port: 5432  # PostgreSQL
    - protocol: TCP
      port: 6379  # Redis
    - protocol: TCP
      port: 19530 # Milvus
  - to: []  # Allow all outbound for model downloads
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80