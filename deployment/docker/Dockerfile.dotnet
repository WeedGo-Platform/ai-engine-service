# AI Engine Services - .NET API Dockerfile

# Build stage
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
WORKDIR /src

# Copy project files
COPY ["src/dotnet/WeedGo.AI.Api/WeedGo.AI.Api.csproj", "WeedGo.AI.Api/"]
COPY ["src/dotnet/WeedGo.AI.Application/WeedGo.AI.Application.csproj", "WeedGo.AI.Application/"]
COPY ["src/dotnet/WeedGo.AI.Domain/WeedGo.AI.Domain.csproj", "WeedGo.AI.Domain/"]
COPY ["src/dotnet/WeedGo.AI.Infrastructure/WeedGo.AI.Infrastructure.csproj", "WeedGo.AI.Infrastructure/"]

# Restore dependencies
RUN dotnet restore "WeedGo.AI.Api/WeedGo.AI.Api.csproj"

# Copy source code
COPY src/dotnet/ .

# Build application
WORKDIR "/src/WeedGo.AI.Api"
RUN dotnet build "WeedGo.AI.Api.csproj" -c Release -o /app/build

# Publish stage
FROM build AS publish
RUN dotnet publish "WeedGo.AI.Api.csproj" -c Release -o /app/publish /p:UseAppHost=false

# Runtime stage
FROM mcr.microsoft.com/dotnet/aspnet:9.0 AS final

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r weedgo && useradd -r -g weedgo -u 1000 weedgo

# Set working directory
WORKDIR /app

# Copy published app
COPY --from=publish /app/publish .

# Create necessary directories
RUN mkdir -p /app/logs /app/models && \
    chown -R weedgo:weedgo /app

# Set permissions
RUN chmod +x /app/WeedGo.AI.Api

# Switch to non-root user
USER weedgo

# Expose ports
EXPOSE 8080 8081 9090

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/health/live || exit 1

# Environment variables
ENV ASPNETCORE_ENVIRONMENT=Production
ENV ASPNETCORE_URLS=http://+:8080;http://+:8081
ENV DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false

# Entry point
ENTRYPOINT ["dotnet", "WeedGo.AI.Api.dll"]